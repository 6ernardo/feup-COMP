import Auxi;
import foo.bar.A;
import foo.bar.B;
Foo extends A {


.method public static main(args.array.String).V {
ret.V ;
}

.method public getFooIns().Foo {
tmp0.Foo :=.Foo new(Foo).Foo;
invokespecial(tmp0.Foo, "").V;
res.Foo :=.Foo tmp0.Foo;
ret.Foo res.Foo;
}

.method public test().i32 {
tmp1.Foo :=.Foo invokevirtual(this.Foo, "getFooIns").Foo;
res.Foo :=.Foo tmp1.Foo;
ret.i32 0.i32;
}

.construct Foo().V {
invokespecial(this, "<init>").V;
}
}
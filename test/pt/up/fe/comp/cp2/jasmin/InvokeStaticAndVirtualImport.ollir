import io.test;
Foo{


.method public static main(args.array.String).V {
ret.V ;
}

.method public add(a.i32, b.i32).i32 {
tmp0.test :=.test new(test).test;
invokespecial(tmp0.test, "").V;
t.test :=.test tmp0.test;
tmp1.i32 :=.i32 invokestatic(test, "add", a.i32, b.i32).i32;
res.i32 :=.i32 tmp1.i32;
tmp2.i32 :=.i32 invokevirtual(t.test, "add", a.i32, b.i32).i32;
res.i32 :=.i32 tmp2.test;
}

.construct Foo().V {
invokespecial(this, "<init>").V;
}
}